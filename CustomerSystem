# Throughout this project, the use of data structures are not permitted
# Minimal built in functions are to be used and the majority of functions must be
# created by Arujan & Sabeen :D


# More packages may be imported in the space below if approved by your instructor
import csv


def printMenu():
    print('''
          Customer and Sales System\n
          1. Enter Customer Information\n
          2. Generate Customer data file\n
          3. Report on total Sales (Not done in this part)\n
          4. Check for fraud in sales data (Not done in this part)\n
          9. Quit\n
          Enter menu option (1-9)
          ''')


'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
def enterCustomerInfo(customers):
    print("Enter customer information:")
    first_name = input("First Name: ").strip()
    last_name = input("Last Name: ").strip()
    city = input("City: ").strip()


    postal_code = input("Postal Code: ").strip()
    while not validatePostalCode(postal_code):
        print("Invalid postal code. Please try again.")
        postal_code = input("Postal Code: ").strip()


    credit_card = input("Credit Card Number: ").strip()
    while not validateCreditCard(credit_card):
        print("Invalid credit card number. Please try again.")
        credit_card = input("Credit Card Number: ").strip()


    customer_id = len(customers) + 1
    customers.append([customer_id, first_name, last_name, city, postal_code, credit_card])
    print(f"Customer added successfully with ID: {customer_id}")


'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
def validatePostalCode(postal_code):
    valid_postal_codes = []
    with open('postal_codes.csv', "r") as file:
            reader = csv.reader(file, delimiter="|")
            for column in reader:
                valid_postal_codes.append(column[0])
    if len(postal_code) < 3:
        return False
    for code in valid_postal_codes:
        if postal_code[:3] == code[:3]:
            return True
    return False


'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
def validateCreditCard(card_number):
    try:
        digits = []
        for digit in str(card_number)[::-1]:
            digits.append(int(digit))


        if not len(digits) == 9:
            print("9-digit required.")
            return False


        sum1 = sum(digits[0::2])


        sum2 = 0
        for digit in digits[1::2]:
            doubled = digit * 2
            if doubled > 9:
                doubled -= 9
            sum2 += doubled


        total = sum1 + sum2


        is_valid = total % 10 == 0


        return is_valid
    except ValueError:
        print("Input numerical values only.")
        return False
'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
def generateCustomerDataFile(customers):
    with open('customers.csv', "w", newline="") as file:
        writer = csv.writer(file, delimiter="|")
       
        writer.writerow(["ID", "First Name", "Last Name", "City", "Postal Code", "Credit Card"])
       
        for customer in customers:
            writer.writerow(customer)
   
    with open('customers.csv', "r") as file:
        print(f"\nCustomer data file:\n{file.read()}")


####################################################################
#       ADDITIONAL METHODS MAY BE ADDED BELOW IF NECESSARY         #
####################################################################






####################################################################
#                            MAIN PROGRAM                          #
#           DO NOT EDIT ANY CODE EXCEPT WHERE INDICATED            #
####################################################################


# Do not edit any of these variables
userInput = ""
enterCustomerOption = "1"
generateCustomerOption = "2"
exitCondition = "9"




# More variables for the main may be declared in the space below
customers = []


while userInput != exitCondition:
    printMenu()
    userInput = input("Enter menu option (1-9): ").strip()


    if userInput == enterCustomerOption:
        enterCustomerInfo(customers)


    elif userInput == generateCustomerOption:
        generateCustomerDataFile(customers)


    else:
        print("Please type in a valid option (A number from 1-9)")


print("Program Terminated")
